#pragma once


namespace user
{
	// ENUMS
	enum class Resolution
	{
		r800x600 = 0,
		r1024x768 = 1,
		r1920x1080 = 2,
	};
	enum class Layer
	{
		BACKGROUND_FAR,
		BACKGROUND_CLOSE,
		TILE_GROUND_FAR,
		TILE_GROUND_CLOSE,
		TILE_GROUND_TRAP,
		LEVEL_GROUND,
		LEVEL_ABOVE_GROUND,
		PLACEMENT_OBJECT,
		PLACEMENT_NODE_AVAILABILITY,		
		PROJECTILE,
		VISUAL_EFFECTS,
		TEXT,
		UI_BACKGROUND,
		UI_OBJECTS,
		UI_TEXT,
		MOUSE,


		_COUNT,
	};
	enum class ComponentType {

		ACTION,
		AI,
		ANIMATEDSPRITE1,
		ANIMATEDSPRITE2,
		ANIMATEDSPRITE3,
		ANIMATEDSPRITE4,
		ANIMATEDSPRITE5,
		ATTACK,
		AUDIO,
		BALLISTA,
		BARRICADE,
		BUTTON,
		CAMERA,
		CELLGRID,
		COLLISION1,
		COLLISION2,
		COLLISION3,
		COLLISION4,
		COLLISION5,
		EQUIPMENT,
		ENEMY,
		HEALTH,
		MOVEMENT,
		NODE,
		PATHFINDING,
		PLAYER,
		PROJECTILE,
		RESOURCES,
		STATE,
		STATS,
		TEST,
		TEXT,
		TIME,
		TRANSFORM,
		TRAP,



		_NONE,
	};
	enum class State {
		// The order is used to check for interruptibility
		IDLE = 1,
		MOVING = 2,
		TAKING_ACTION = 3,
		STATUS_EFFECT = 4,
		DYING = 5,
		DEAD = 6
	};
	enum class SubState
	{
		// IDLE (100-199)
		IDLE_DEFAULT = 100,
		IDLE_STANDING = 101,
		IDLE_LYING = 102,
		IDLE_SNORING = 103,
		IDLE_DEFENDING = 104,
		IDLE_SUFFICIENTFUNDS_AND_INPHASE = 105,
		IDLE_SUFFICIENTFUNDS_AND_OUTOFPHASE = 106,
		IDLE_INSUFFICIENTFUNDS_AND_INPHASE = 107,
		IDLE_INSUFFICIENTFUNDS_AND_OUTOFPHASE = 108,
		IDLE_NODE_INVISIBLE = 109,
		IDLE_NODE_AVAILABLE = 110,
		IDLE_NODE_UNAVAILABLE = 111,
		IDLE_NODE_PATH = 112,

		// MOVING (200-299)
		MOVING_WALKING = 200,
		MOVING_RUNNING = 201,
		MOVING_SWIMMING = 202,
		MOVING_FLYING = 203,
		MOVING_DRAGGING = 204,

		// TAKING_ACTION (300-399)
		ACTION_ATTACKING = 300,
		ACTION_GETTING_HIT = 301,
		ACTION_USING_POTION = 302,
		ACTION_SPRINGING_TRAP = 303,
		ACTION_SHOOTING = 304,	

		// STATUS EFFECT (400-499)
		STATUS_PARALYZED = 400,
		STATUS_STUNNED = 401,
		STATUS_KNOWDOWN = 402,
		STATUS_RELOADING = 403,

		// DYING (500-599)
		DYING_NORMAL = 500,

		// DEAD (600-699)
		DEAD_NORMAL = 600
	};
	enum class Direction
	{
		Facing_RIGHT,
		Facing_LEFT,
		Facing_DOWN,
		Facing_UP
	};
	enum class CollisionProfile
	{
		MOUSE,
		UNIT_ENEMY,
		UNIT_PLAYER,
		STRUCTURE,
		TRAP,		
		TOWER,
		STATIC_OBJECTS,
		DETECTION_ZONE,
		ATTACK_ZONE,
		PROJECTILE,	
		NODE,
		// USER-DEFINED
		// USER-DEFINED
		// USER-DEFINED
		// USER-DEFINED
		// USER-DEFINED

		_NONE
	};	
	enum class Motif
	{
		VALLEY,
		LAVA_CHAMBER
	};
	enum class TileType
	{
		WORLD_EDGE,			// X
		FLOWING,			// W
		FLOWING_BORDER,		// B
		LAND,				// L
		MOUNTAIN,			// M
		TREE,				// T
		SPAWN_POINT,		// S
		TOWER,				// H



		_ERROR
	};
	enum class ProjectileType
	{
		Arrow_Basic,
		Arrow_Ballista,
		Rock,


		_NONE
	};
	enum class TrapType
	{
		TAR_TRAP,
		SPIKE_TRAP,


		_COUNT
	};
	enum class Alignment
	{
		TOP_LEFT,
		TOP_CENTRE,
		TOP_RIGHT,

		MIDDLE_LEFT,
		MIDDLE_CENTRE,
		MIDDLE_RIGHT,

		BOT_LEFT,
		BOT_CENTRE,
		BOT_RIGHT
	};
	enum class UI_Button
	{
		MENU,
		BALLISTA,
		WOODEN_BOX,
		TAR_TRAP,
		SPIKE_TRAP,
		HEAL_SPELL,
		FIREBALL_SPELL,
		CANCEL,


		_COUNT
	};
	enum class OwnerType
	{
		PLAYER,
		ENEMY,
		NEUTRAL,



		_COUNT,
	};
	enum class GameMode
	{
		NORMAL_MODE,
		PLACEMENT_MODE,
		PLACEMENT_MODE_PREPARATION_PHASE,
		PLACEMENT_MODE_DEFENSE_PHASE,
	};
	enum class GamePhase
	{
		PREPARATION_PHASE,
		DEFENSE_PHASE,
	};
	enum class PlacementMode
	{
		PLACEMENT_BALLISTA,
		PLACEMENT_WOODENBOX,
		PLACEMENT_TARTRAP,
		PLACEMENT_SPIKETRAP,
		PLACEMENT_HEALSPELL,
		PLACEMENT_FIREBALLSPELL,

		NONE
	};
	enum class EnemyType {

		GOBLIN_WARRIOR,
		SKELETON_WARRIOR,
		ORC_WARRIOR,
		MUMMY,
		OGRE,
		DRAGON,


		_COUNT
	};
	enum class TimerType {

		TIMER_STARTING,
		TIMER_INTERVAL_BETWEEN_WAVES,
		TIMER_INTERVAL_BETWEEN_UNITS,
		TIMER_SPELL_EFFECT,
		TIMER_ARROW_VANISHING,
		TIMER_TARTRAP_EFFECT,
		TIMER_SPECIAL_EFFECT,
		TIMER_ATTACK_INTERVAL,

		_NONE
	};
}


